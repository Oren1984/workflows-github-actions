# GitHub Actions workflow to build and push a Docker image
# Secrets (username/token) and variables (image name) are configured in GitHub settings

name: Build & Push to Docker Hub

on:
  push:
    branches: [ "main" ]     # Trigger when pushing to main branch
  workflow_dispatch:          # Allow manual trigger from GitHub UI

env:
  IMAGE_NAME: ${{ vars.IMAGE_NAME }} # Repository variable, e.g., oren1984/flask-actions-demo

jobs:
  docker:
    runs-on: ubuntu-latest    # Run job on the latest Ubuntu runner
    permissions:
      contents: read          # Allow reading repository content
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4   # Pull the repository code

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3   # Prepare advanced Docker builder

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # GitHub Secret: your Docker Hub username
          password: ${{ secrets.DOCKERHUB_TOKEN }}    # GitHub Secret: Docker Hub Access Token

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }} # Use the image name from env
          tags: |
            type=raw,value=latest       # Always tag "latest"
            type=sha                    # Also tag with commit SHA

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .                    # Root folder of the project
          file: ./Dockerfile            # Path to Dockerfile
          push: true                    # Push the image to Docker Hub
          tags: ${{ steps.meta.outputs.tags }}     # Tags generated above
          labels: ${{ steps.meta.outputs.labels }} # Labels generated above
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
